{
	"components": {
		"examples": {},
		"headers": {},
		"parameters": {},
		"requestBodies": {},
		"responses": {},
		"schemas": {
			"GPSPosition": {
				"properties": {
					"latitude": {
						"type": "number",
						"format": "double"
					},
					"longitude": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"latitude",
					"longitude"
				],
				"type": "object"
			},
			"FishingPost": {
				"properties": {
					"infos": {
						"type": "string"
					},
					"location": {
						"$ref": "#/components/schemas/GPSPosition"
					},
					"name": {
						"type": "string"
					},
					"_id": {
						"type": "string"
					}
				},
				"required": [
					"infos",
					"location",
					"name",
					"_id"
				],
				"type": "object"
			},
			"FishingPlace": {
				"properties": {
					"posts": {
						"items": {
							"$ref": "#/components/schemas/FishingPost"
						},
						"type": "array"
					},
					"infos": {
						"type": "string"
					},
					"surface": {
						"type": "number",
						"format": "double"
					},
					"boatAuthorized": {
						"anyOf": [
							{
								"type": "boolean"
							},
							{
								"type": "string"
							}
						]
					},
					"nightFishing": {
						"anyOf": [
							{
								"type": "boolean"
							},
							{
								"type": "string"
							}
						]
					},
					"link": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"_id": {
						"type": "string"
					}
				},
				"required": [
					"posts",
					"name",
					"_id"
				],
				"type": "object"
			},
			"Pick_FishingPlace.Exclude_keyofFishingPlace._id-or-posts__": {
				"properties": {
					"name": {
						"type": "string"
					},
					"link": {
						"type": "string"
					},
					"nightFishing": {
						"anyOf": [
							{
								"type": "boolean"
							},
							{
								"type": "string"
							}
						]
					},
					"boatAuthorized": {
						"anyOf": [
							{
								"type": "boolean"
							},
							{
								"type": "string"
							}
						]
					},
					"surface": {
						"type": "number",
						"format": "double"
					},
					"infos": {
						"type": "string"
					}
				},
				"required": [
					"name"
				],
				"type": "object",
				"description": "From T, pick a set of properties whose keys are in the union K"
			},
			"Omit_FishingPlace._id-or-posts_": {
				"$ref": "#/components/schemas/Pick_FishingPlace.Exclude_keyofFishingPlace._id-or-posts__",
				"description": "Construct a type with the properties of T except for those in type K."
			},
			"NewFishingPlace": {
				"$ref": "#/components/schemas/Omit_FishingPlace._id-or-posts_"
			},
			"ErrorMessage": {
				"properties": {
					"message": {
						"type": "string"
					}
				},
				"required": [
					"message"
				],
				"type": "object"
			},
			"Partial_FishingPlace_": {
				"properties": {
					"_id": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"link": {
						"type": "string"
					},
					"nightFishing": {
						"anyOf": [
							{
								"type": "boolean"
							},
							{
								"type": "string"
							}
						]
					},
					"boatAuthorized": {
						"anyOf": [
							{
								"type": "boolean"
							},
							{
								"type": "string"
							}
						]
					},
					"surface": {
						"type": "number",
						"format": "double"
					},
					"infos": {
						"type": "string"
					},
					"posts": {
						"items": {
							"$ref": "#/components/schemas/FishingPost"
						},
						"type": "array"
					}
				},
				"type": "object",
				"description": "Make all properties in T optional"
			},
			"Pick_FishingPost.Exclude_keyofFishingPost._id__": {
				"properties": {
					"name": {
						"type": "string"
					},
					"infos": {
						"type": "string"
					},
					"location": {
						"$ref": "#/components/schemas/GPSPosition"
					}
				},
				"required": [
					"name",
					"infos",
					"location"
				],
				"type": "object",
				"description": "From T, pick a set of properties whose keys are in the union K"
			},
			"Omit_FishingPost._id_": {
				"$ref": "#/components/schemas/Pick_FishingPost.Exclude_keyofFishingPost._id__",
				"description": "Construct a type with the properties of T except for those in type K."
			},
			"NewFishingPost": {
				"$ref": "#/components/schemas/Omit_FishingPost._id_"
			},
			"Partial_FishingPost_": {
				"properties": {
					"_id": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"location": {
						"$ref": "#/components/schemas/GPSPosition"
					},
					"infos": {
						"type": "string"
					}
				},
				"type": "object",
				"description": "Make all properties in T optional"
			},
			"PreparationItem": {
				"properties": {
					"checked": {
						"type": "boolean"
					},
					"label": {
						"type": "string"
					}
				},
				"required": [
					"checked",
					"label"
				],
				"type": "object"
			},
			"PreparationCategory": {
				"properties": {
					"items": {
						"items": {
							"$ref": "#/components/schemas/PreparationItem"
						},
						"type": "array"
					},
					"label": {
						"type": "string"
					},
					"_id": {
						"type": "string"
					}
				},
				"required": [
					"items",
					"label",
					"_id"
				],
				"type": "object"
			},
			"Pick_PreparationCategory.Exclude_keyofPreparationCategory._id-or-items__": {
				"properties": {
					"label": {
						"type": "string"
					}
				},
				"required": [
					"label"
				],
				"type": "object",
				"description": "From T, pick a set of properties whose keys are in the union K"
			},
			"Omit_PreparationCategory._id-or-items_": {
				"$ref": "#/components/schemas/Pick_PreparationCategory.Exclude_keyofPreparationCategory._id-or-items__",
				"description": "Construct a type with the properties of T except for those in type K."
			},
			"NewPreparationCategory": {
				"$ref": "#/components/schemas/Omit_PreparationCategory._id-or-items_"
			},
			"Partial_PreparationCategory_": {
				"properties": {
					"_id": {
						"type": "string"
					},
					"label": {
						"type": "string"
					},
					"items": {
						"items": {
							"$ref": "#/components/schemas/PreparationItem"
						},
						"type": "array"
					}
				},
				"type": "object",
				"description": "Make all properties in T optional"
			},
			"ShoppingListItem": {
				"properties": {
					"label": {
						"type": "string"
					},
					"_id": {
						"type": "string"
					}
				},
				"required": [
					"label",
					"_id"
				],
				"type": "object"
			},
			"Pick_ShoppingListItem.Exclude_keyofShoppingListItem._id__": {
				"properties": {
					"label": {
						"type": "string"
					}
				},
				"required": [
					"label"
				],
				"type": "object",
				"description": "From T, pick a set of properties whose keys are in the union K"
			},
			"Omit_ShoppingListItem._id_": {
				"$ref": "#/components/schemas/Pick_ShoppingListItem.Exclude_keyofShoppingListItem._id__",
				"description": "Construct a type with the properties of T except for those in type K."
			},
			"NewShoppingListItem": {
				"$ref": "#/components/schemas/Omit_ShoppingListItem._id_"
			}
		},
		"securitySchemes": {}
	},
	"info": {
		"title": "fishing-log-back",
		"version": "0.0.0",
		"description": "Back of fishing-log app",
		"license": {
			"name": "ISC"
		},
		"contact": {}
	},
	"openapi": "3.0.0",
	"paths": {
		"/places": {
			"get": {
				"operationId": "GetItems",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/FishingPlace"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"tags": [
					"places"
				],
				"security": [],
				"parameters": []
			},
			"post": {
				"operationId": "AddItem",
				"responses": {
					"201": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/FishingPlace"
								}
							}
						}
					}
				},
				"tags": [
					"places"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/NewFishingPlace"
							}
						}
					}
				}
			}
		},
		"/places/{itemId}": {
			"delete": {
				"operationId": "DeleteItem",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"$ref": "#/components/schemas/FishingPlace"
										},
										{
											"$ref": "#/components/schemas/ErrorMessage"
										}
									]
								}
							}
						}
					}
				},
				"tags": [
					"places"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "itemId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"patch": {
				"operationId": "PatchItem",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"$ref": "#/components/schemas/FishingPlace"
										},
										{
											"$ref": "#/components/schemas/ErrorMessage"
										}
									]
								}
							}
						}
					}
				},
				"tags": [
					"places"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "itemId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Partial_FishingPlace_"
							}
						}
					}
				}
			}
		},
		"/places/{itemId}/posts": {
			"post": {
				"operationId": "AddPost",
				"responses": {
					"201": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/FishingPost"
								}
							}
						}
					}
				},
				"tags": [
					"places"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "itemId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/NewFishingPost"
							}
						}
					}
				}
			}
		},
		"/places/{itemId}/posts/{postId}": {
			"delete": {
				"operationId": "DeletePost",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"type": "string"
										},
										{
											"$ref": "#/components/schemas/ErrorMessage"
										}
									]
								}
							}
						}
					}
				},
				"tags": [
					"places"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "itemId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "postId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"patch": {
				"operationId": "EditPost",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"type": "string"
										},
										{
											"$ref": "#/components/schemas/ErrorMessage"
										}
									]
								}
							}
						}
					}
				},
				"tags": [
					"places"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "itemId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "postId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Partial_FishingPost_"
							}
						}
					}
				}
			}
		},
		"/preparation": {
			"get": {
				"operationId": "GetItems",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/PreparationCategory"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"tags": [
					"preparation"
				],
				"security": [],
				"parameters": []
			},
			"post": {
				"operationId": "AddItem",
				"responses": {
					"201": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/PreparationCategory"
								}
							}
						}
					}
				},
				"tags": [
					"preparation"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/NewPreparationCategory"
							}
						}
					}
				}
			}
		},
		"/preparation/{itemId}": {
			"delete": {
				"operationId": "DeleteItem",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"$ref": "#/components/schemas/PreparationCategory"
										},
										{
											"$ref": "#/components/schemas/ErrorMessage"
										}
									]
								}
							}
						}
					}
				},
				"tags": [
					"preparation"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "itemId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"patch": {
				"operationId": "PatchItem",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"$ref": "#/components/schemas/PreparationCategory"
										},
										{
											"$ref": "#/components/schemas/ErrorMessage"
										}
									]
								}
							}
						}
					}
				},
				"tags": [
					"preparation"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "itemId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Partial_PreparationCategory_"
							}
						}
					}
				}
			}
		},
		"/shopping": {
			"get": {
				"operationId": "GetItems",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/ShoppingListItem"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"tags": [
					"shopping"
				],
				"security": [],
				"parameters": []
			},
			"post": {
				"operationId": "AddItem",
				"responses": {
					"201": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ShoppingListItem"
								}
							}
						}
					}
				},
				"tags": [
					"shopping"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/NewShoppingListItem"
							}
						}
					}
				}
			}
		},
		"/shopping/{itemId}": {
			"delete": {
				"operationId": "DeleteItem",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"$ref": "#/components/schemas/ShoppingListItem"
										},
										{
											"$ref": "#/components/schemas/ErrorMessage"
										}
									]
								}
							}
						}
					}
				},
				"tags": [
					"shopping"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "itemId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		}
	},
	"servers": [
		{
			"url": "/"
		}
	]
}